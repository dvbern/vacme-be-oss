[{
  "id": "vacme",
  "realm": "vacme",
  "displayName": "VacMe Registrierung",
  "notBefore": 0,
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": false,
  "duplicateEmailsAllowed": true,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "5ce56b1c-9551-45fe-a45e-c14bbcbf714c",
        "name": "Fachverantwortung BAB",
        "description": "Fachverantwortung BAB",
        "composite": true,
        "composites": {
          "realm": [
            "OI_IMPFVERANTWORTUNG",
            "OI_KONTROLLE",
            "OI_ORT_VERWALTER",
            "OI_BENUTZER_REPORTER",
            "OI_LOGISTIK_REPORTER",
            "OI_MEDIZINISCHER_REPORTER",
            "OI_DOKUMENTATION",
            "OI_BENUTZER_VERWALTER"
          ]
        },
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "6a0fc9a8-db0f-4bc9-9b01-afbf2bfd8345",
        "name": "Admin",
        "composite": true,
        "composites": {
          "realm": [
            "KT_LOGISTIK_REPORTER",
            "KT_MEDIZINISCHER_REPORTER",
            "KT_BENUTZER_VERWALTER",
            "KT_BENUTZER_REPORTER"
          ]
        },
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "9ff5841a-8cbf-4464-8d99-e336645e2f01",
        "name": "CC_AGENT",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "f2a17391-0d7f-434d-95d9-c445249c91f1",
        "name": "IMPFWILLIGER",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "5db7eedd-fce9-4fae-aec5-1a95d540f16f",
        "name": "Organisationsverantwortung",
        "composite": true,
        "composites": {
          "realm": [
            "OI_KONTROLLE",
            "OI_ORT_VERWALTER",
            "OI_BENUTZER_REPORTER",
            "OI_LOGISTIK_REPORTER",
            "OI_MEDIZINISCHER_REPORTER",
            "OI_DOKUMENTATION",
            "OI_BENUTZER_VERWALTER"
          ]
        },
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "0e7c6386-d00d-491b-ba83-4a34850a5a73",
        "name": "OI_BENUTZER_VERWALTER",
        "description": "Können Benutzer des Ortes der Impfung verwalten.",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "b4ab166a-361b-4f52-b6ab-319e38cfe91f",
        "name": "OI_LOGISTIK_REPORTER",
        "description": "Logistik-Reports, z.B. anstehende Impfungen, Termine, …",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "6cbd68f2-7d89-4b29-8546-038650ac915d",
        "name": "Personal Telefon",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "20990e6a-0b9d-40ee-b11c-a03d16adcc7a",
        "name": "OI_KONTROLLE",
        "description": "Kontrollieren die Personendaten zu einer Registrationsnummer oder erfassen eine neue Registration.",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "63f78ed4-abae-4829-8da3-f26b3b5ed9d4",
        "name": "KT_MEDIZINISCHER_REPORTER",
        "description": "Medizinische Reports",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "85dce24c-0f0b-47cd-858d-429d51aaf4dd",
        "name": "KT_LOGISTIK_REPORTER",
        "description": "Logistik-Reports, z.B. anstehende Impfungen, Termine, …",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "4d4b62b2-f2fc-4065-95bf-e7e395f249c7",
        "name": "Fachverantwortung Aufsicht",
        "composite": true,
        "composites": {
          "realm": [
            "KT_LOGISTIK_REPORTER",
            "KT_MEDIZINISCHER_REPORTER",
            "KT_IMPFVERANTWORTUNG",
            "KT_BENUTZER_VERWALTER",
            "KT_BENUTZER_REPORTER"
          ]
        },
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "91342143-82fb-41d9-ab0c-2f5f01264a10",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "f49c9322-8069-4efc-8e3c-564f8537b6db",
        "name": "Personal",
        "composite": true,
        "composites": {
          "realm": [
            "OI_KONTROLLE"
          ]
        },
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "32aaabd1-9df4-4313-8d5c-acc430175ae3",
        "name": "Fachsupervision",
        "composite": true,
        "composites": {
          "realm": [
            "OI_KONTROLLE",
            "OI_LOGISTIK_REPORTER",
            "OI_MEDIZINISCHER_REPORTER",
            "OI_DOKUMENTATION"
          ]
        },
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "de652fee-ed96-4642-9630-4d80cde591f4",
        "name": "Personal Aufsicht",
        "composite": true,
        "composites": {
          "realm": [
            "KT_LOGISTIK_REPORTER",
            "KT_MEDIZINISCHER_REPORTER"
          ]
        },
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "48bc8874-3853-4ed2-a8c3-145230418712",
        "name": "CC_BENUTZER_VERWALTER",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "6a73b23c-4bf9-4c9a-b828-8d104dec8c67",
        "name": "KT_ZERTIFIKAT_AUSSTELLER",
        "description": "Benutzer die die einstellungen für covid-zertifikate verwalten",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme-web",
        "attributes": {}
      },
      {
        "id": "53225c1a-ff22-4bc1-a1e5-e1560f623fdb",
        "name": "OI_IMPFVERANTWORTUNG",
        "description": "Haben Einsicht auf alle Registrationen und Impfungen des Ortes der Impfung. Haben medizinische Verantwortung.",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "26984790-d7b3-4a86-93fe-db550030f2bb",
        "name": "AS_REGISTRATION_OI",
        "description": "Koennen neue Ort der Impfungen anlegen.",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "7a62d172-ef5f-477c-8e51-0ddd8ba7e44e",
        "name": "AS_BENUTZER_VERWALTER",
        "description": "Können sämtliche Benutzer verwalten.",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "0e2aa921-0a2c-4e88-9207-3ca592564600",
        "name": "KT_BENUTZER_VERWALTER",
        "description": "Koennen Kantonsbenutzer verwalten.",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "e922b040-412f-4768-9b1c-ad37f33fe264",
        "name": "OI_DOKUMENTATION",
        "description": "Dokumentieren die Impfungen 1 und 2",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "991f802f-f216-4c4c-b415-365ba6136ac3",
        "name": "Fachpersonal",
        "composite": true,
        "composites": {
          "realm": [
            "OI_KONTROLLE",
            "OI_DOKUMENTATION"
          ]
        },
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "dbc2f903-aa7d-47b7-a82d-5bd1b17418e1",
        "name": "KT_IMPFVERANTWORTUNG",
        "description": "Haben Einsicht auf alle Registrationen und Impfungen. Haben medizinische Verantwortung.",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "5e2af191-895a-42f8-aaad-86d2c5d24529",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "8a81f3d1-eac8-411e-ba5d-37b6a39b7f59",
        "name": "KT_BENUTZER_REPORTER",
        "description": "Reports zu den VacMe-Benutzern",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "d5045e5c-71c2-4dc7-921f-eadfeef9c3cc",
        "name": "KT_NACHDOKUMENTATION",
        "description": "Kann personal daten anpassen",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme-web",
        "attributes": {}
      },
      {
        "id": "23b9e79f-5237-4505-923b-8e580c9a20d7",
        "name": "KT_MEDIZINISCHE_NACHDOKUMENTATION",
        "description": "Kann personal daten anpassen und alle korrekturen machen",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme-web",
        "attributes": {}
      },
      {
        "id": "a487caa6-af09-44d6-b778-6d28acac9fb1",
        "name": "OI_ORT_VERWALTER",
        "description": "Können den Ort der Impfung inklusive der Terminslots vewalten.",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "2bb46883-f7fd-436b-b704-d703426c9b86",
        "name": "Organisationssupervision",
        "composite": true,
        "composites": {
          "realm": [
            "OI_KONTROLLE",
            "OI_ORT_VERWALTER",
            "OI_LOGISTIK_REPORTER",
            "OI_MEDIZINISCHER_REPORTER",
            "OI_DOKUMENTATION"
          ]
        },
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "b33ca3fd-872d-4344-ab26-45f50efa11cb",
        "name": "OI_BENUTZER_REPORTER",
        "description": "Reports zu den VacMe-Benutzern des Ortes der Impfung",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      },
      {
        "id": "0a761b7e-a2f7-4dd4-b7be-3165078da835",
        "name": "OI_MEDIZINISCHER_REPORTER",
        "description": "Medizinische Reports",
        "composite": false,
        "clientRole": false,
        "containerId": "vacme",
        "attributes": {}
      }
    ],
    "client": {
      "https://vacme-dev-wp.dvbern.ch/wp-content/plugins/miniorange-saml-20-single-sign-on/": [],
      "realm-management": [
        {
          "id": "14daf54e-1be2-434b-8bc4-f23526e86232",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "f8aa7744-84de-496a-9ef4-413255d4da3f",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "e23e02db-6d67-4225-8402-d40949cb2513",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "b6df43e2-a8b7-497a-8127-a2cf8c379744",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "160ab37b-1b49-4054-b66c-f9b2488d81cd",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "caa0941b-e1d8-44e5-8ade-e53ed612e9da",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "9c29c526-9056-4750-9f2f-756f09cc0275",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "4cf95aae-773d-4a7c-a74d-2e3035496dcb",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "9f2d83d2-1699-4779-a8af-275389258a64",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "0ff1b95f-f740-49c2-8a6e-979bb7962ea7",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "9031be11-fb90-43f7-b84c-1b7d4236a3c0",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "8d2f2a45-891d-4846-94f3-c75c7bb6b866",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "69467a1b-ea80-4c36-9df3-ccda5ea681f8",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "af654a64-11a8-4b65-9791-b3ea30fb1918",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "e2c071f8-7d00-4f19-89f6-4a90b394f7d4",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "0ab8c501-f6d6-411d-bf1a-2a2c7d8fe81e",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "cd6c616f-8bce-433b-b5a9-700ded94029a",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-users",
                "view-users",
                "impersonation",
                "manage-realm",
                "create-client",
                "query-groups",
                "view-realm",
                "manage-events",
                "view-identity-providers",
                "manage-authorization",
                "query-realms",
                "view-events",
                "query-clients",
                "view-authorization",
                "manage-clients",
                "manage-identity-providers",
                "view-clients",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "dc8fec8b-9871-4e8c-bddc-5f0fee0f629c",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "b71e80c0-0d74-4abd-b73c-be433809e708",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        },
        {
          "id": "f1f87893-fba3-4d89-a1f0-b650e1ffa83b",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "vacme-initial-app-dev": [],
      "vacme-admin-client": [],
      "admin-cli": [],
      "account-console": [],
      "vacme-initial-app-localhost": [],
      "vacme-rest-api-dev": [],
      "broker": [
        {
          "id": "6c2c1a0c-d324-4131-913a-e87356bdd4ee",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "5842251b-d268-4c5b-bff7-b93b7543a4d3",
          "attributes": {}
        }
      ],
      "vacme-rest-api-localhost": [],
      "account": [
        {
          "id": "c38d740f-2422-4ddf-bb25-b67d23b1c1d5",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "01c19474-ffea-451b-8cee-c6bb36bdcb1b",
          "attributes": {}
        },
        {
          "id": "63c7163d-19d8-4299-ac09-1013afbaf928",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "01c19474-ffea-451b-8cee-c6bb36bdcb1b",
          "attributes": {}
        },
        {
          "id": "6e150106-c17c-4227-94d3-a83c8ed769ac",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "01c19474-ffea-451b-8cee-c6bb36bdcb1b",
          "attributes": {}
        },
        {
          "id": "33e291d1-1f93-4d1b-8513-320fda38dfcc",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "01c19474-ffea-451b-8cee-c6bb36bdcb1b",
          "attributes": {}
        },
        {
          "id": "ea0d7993-1aae-4c6c-af96-7d0cc6da31f1",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "01c19474-ffea-451b-8cee-c6bb36bdcb1b",
          "attributes": {}
        },
        {
          "id": "4316f189-74a0-4f74-a5fd-9b0d6b7544bd",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "01c19474-ffea-451b-8cee-c6bb36bdcb1b",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRoles": [
    "IMPFWILLIGER"
  ],
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "5c97a71d-f2b8-43d5-bdff-837a6e874bdb",
      "createdTimestamp": 1614003778024,
      "username": "service-account-realm-management",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "realm-management",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "IMPFWILLIGER"
      ],
      "clientRoles": {
        "realm-management": [
          "uma_protection"
        ],
        "account": [
          "manage-account",
          "view-profile"
        ]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "01c19474-ffea-451b-8cee-c6bb36bdcb1b",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/vacme/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "defaultRoles": [
        "manage-account",
        "view-profile"
      ],
      "redirectUris": [
        "/realms/vacme/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [],
      "optionalClientScopes": []
    },
    {
      "id": "b48c366d-0824-4e07-bbce-95eb58451855",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/vacme/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/realms/vacme/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "1fc56d67-baa3-46fc-a78d-49bad792e3f3",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [],
      "optionalClientScopes": []
    },
    {
      "id": "155ad8de-6dba-4898-a7a5-8be979dccef0",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [],
      "optionalClientScopes": []
    },
    {
      "id": "5842251b-d268-4c5b-bff7-b93b7543a4d3",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [],
      "optionalClientScopes": []
    },
    {
      "id": "f60d85e8-a59f-4a51-b4aa-78b147b53bbc",
      "clientId": "https://vacme-dev-wp.dvbern.ch/wp-content/plugins/miniorange-saml-20-single-sign-on/",
      "name": "WP SSO",
      "description": "Wordpress Anbindung für Blog VacMe",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://vacme-dev-wp.dvbern.ch/"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "saml",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml_assertion_consumer_url_post": "https://vacme-dev-wp.dvbern.ch/",
        "saml.server.signature": "true",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.signing.certificate": "MIIDNzCCAh8CBgF2bB0sYTANBgkqhkiG9w0BAQsFADBfMV0wWwYDVQQDDFRodHRwczovL3ZhY21lLWRldi13cC5kdmJlcm4uY2gvd3AtY29udGVudC9wbHVnaW5zL21pbmlvcmFuZ2Utc2FtbC0yMC1zaW5nbGUtc2lnbi1vbi8wHhcNMjAxMjE2MTUxMTU5WhcNMzAxMjE2MTUxMzM5WjBfMV0wWwYDVQQDDFRodHRwczovL3ZhY21lLWRldi13cC5kdmJlcm4uY2gvd3AtY29udGVudC9wbHVnaW5zL21pbmlvcmFuZ2Utc2FtbC0yMC1zaW5nbGUtc2lnbi1vbi8wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDd142O8hkYBVv+LT+/7G7NltbM/c0qkkISnjeAv271BzNGPYeyWFBISvqtQ7bPYKCD8pmk/aiAek27P3kttJp/4RB7jd5SYUgpJKpq68RdHQpL7yTdIPuvFIKPvMFsVludtxD4P6O87ftIDn0GcWbl/lgM0lyb3XuL4erX1aoMxyz4XCBHbDOfoNRP1R+nYlBb2Qtgi6/JHaxN8vZGwq0kgc/FGxFYYOvCwBDpBtfzNwbOikuX8XtCauAnGYP0Sv8TsiUvxg60pPQXE+d3iHyTEABAtV0r8EFB5sr+4A+OJtumiseIg8C4q5gAsdoZ7dgPyXXdqCuXW68b8jjjYB2BAgMBAAEwDQYJKoZIhvcNAQELBQADggEBALUsVwq28RlKBuD/ZimOoF7djbkkF1XqGoqoxnfVUUxm6tgTqg1dQ2AYlzxys+6vbVQzrHAz9dh9/Ev/YaZXbzR0ylx+c0VKFMp5B9SaVMMORaUXgPskKmqUs4djvCNF93XpQmZVB2Y0vSbD2w4M1+vqxvPJdV/Y3pYAwRNgeHmvH1QAMx1DX7tD1UmhWGjZn3cOGpcnD+r/l/dhNlIS+uuNGwgfuIjXCemInofXhtjI/vCEQLE2NUM0yj1W9jo3KkrK0kY6juwdriMWmJm9zvX1FZUrHkJsYDZDz4y7AUhpUukDY9OUHI88Pyfw+LknbyuLLJW8Fgf8EhyAsnUtiCg=",
        "saml.signature.algorithm": "RSA_SHA256",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "true",
        "display.on.consent.screen": "false",
        "saml_name_id_format": "email",
        "saml.signing.private.key": "MIIEpQIBAAKCAQEA3deNjvIZGAVb/i0/v+xuzZbWzP3NKpJCEp43gL9u9QczRj2HslhQSEr6rUO2z2Cgg/KZpP2ogHpNuz95LbSaf+EQe43eUmFIKSSqauvEXR0KS+8k3SD7rxSCj7zBbFZbnbcQ+D+jvO37SA59BnFm5f5YDNJcm917i+Hq19WqDMcs+FwgR2wzn6DUT9Ufp2JQW9kLYIuvyR2sTfL2RsKtJIHPxRsRWGDrwsAQ6QbX8zcGzopLl/F7QmrgJxmD9Er/E7IlL8YOtKT0FxPnd4h8kxAAQLVdK/BBQebK/uAPjibbporHiIPAuKuYALHaGe3YD8l13agrl1uvG/I442AdgQIDAQABAoIBADFQ3tY9OZjecCHkGzzmKYeolZ3Ceh6RnwCWjY4ggGEWNa7StNzPxyEbEfj8iaI2P9i1ULSd8xyEk80hgiXH9WSiOtDMq/SyTaFf1kaonOF6ODTDN/W0hF7ad1/OvU0BMaKw9KPLOfIhEXBmUCLjiNVuIlLPXOkFZpalJVjP1dq67lEo4+IMTtaIhaU2nSGya4SiYHseApMWK2V0pZ4CsNxk1lOFWQQFygkb2/RMCJkWkEupEHPPm7rrOM2OF/B19j89PU0GMcwzxCcW6k9LibbkOCFGd51phfcavSutDX2piuPpYNwiqCiGsLGKOKbxfH4x5Dr6lLedieqihKuEybECgYEA+bh+RDeKHMhRn8ZGSzj02z7bK4nG9PqIJu4oE4HK9hWxAVlu1T0UUCtjwSlbKdoNqmJWbG4WQSc3qnsgA4wBzhAdH0PHI14O9wBWpFjKz1+zAJbxuqYYWFODxrH8/LSjyFAloGVCP+leFlkhpIf6iyPE6yhXCMQMbwreMLZ4UaUCgYEA42uZPe/LTQjWWEzTec8ztqv5KcV4LQU38agdxQJbdBdX2UGGPFQcjG3FQ+uZh87HQJXbxBaCTi5oFlz5hy4ks1I0zzML4+YDOYmadqdcyW46qdpATpXrP+G9juXBcFFZdNWFRxdi0EzfK7nAWhk2u4FehK76F4YB/xEElMhIXa0CgYEA11ngIeoXg+zIX1X4psQufKg/D9PYLMmlApWdH/1tTzyzkatTZjcvPle8xgZpJLVz1XzKdOWW8YblfXKC0Cw8Hj1NL/oeUIS7uQykq0QbWix4TMjfG4xDMGCNIpu5xR/uoj9jw2evczhIOFOTLLVLPhSRrA30yI1w/43KwQ2KwzUCgYEApftqJOJXJypEBr5LuqOXwsNRX0NYqsMcSavBzoAh72D6JP7F0lIxY+zaBPB3Zb9tfZ3igANNp3IHVgsVs6vh7V8aW/+Ntg+yWtQrgF42Qm3JMx6vwKt6v20qxJi7zhYRjEwqsfBHlnAEkg1IbnnokIGjUoPC1FhiLJ9nEI/9ASECgYEA35qXV2ToveHusUenKUqO0sAFl2faz6M5ujr96Fm0ohGupDAPZ/ZNssGBgISCCr5TXDm64o8gSA0vfRwEtZoXNAVIKuXySpTOl8WiiOE65xcSbrA0vydkl1SVsKMQeJtegKO1rz1uGFCKJDjKUr3y9HywEoE8W3cqsTEp5uA7Lqg=",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "3c15416c-8109-4496-8138-e60e3f739d0b",
          "name": "X500 surname",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
            "user.attribute": "lastName",
            "friendly.name": "surname",
            "attribute.name": "urn:oid:2.5.4.4"
          }
        },
        {
          "id": "46d2f80d-ad36-44e6-8df5-5386dde0507a",
          "name": "X500 givenName",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
            "user.attribute": "firstName",
            "friendly.name": "givenName",
            "attribute.name": "urn:oid:2.5.4.42"
          }
        },
        {
          "id": "20d32d4a-2cd8-43de-aae4-ba49f247c3fe",
          "name": "X500 email",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
            "user.attribute": "email",
            "friendly.name": "email",
            "attribute.name": "urn:oid:1.2.840.113549.1.9.1"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "96a02c99-c481-43c0-8d26-11303a2b2eaf",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "e5bd095f-b3ea-457e-adbc-286532b12508",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bf734138-7636-450a-94bf-3ccff9835ada",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e40143c7-cead-4c63-83c2-456c2fb42bee",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [],
      "optionalClientScopes": [],
      "authorizationSettings": {
        "allowRemoteResourceManagement": false,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "client.resource.b5770ef7-394a-40fa-b436-5afc7724e886",
            "type": "Client",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "2e7a1e3c-ec37-4b08-8258-399d4242663f",
            "uris": [],
            "scopes": [
              {
                "name": "view"
              },
              {
                "name": "map-roles-client-scope"
              },
              {
                "name": "map-roles"
              },
              {
                "name": "configure"
              },
              {
                "name": "manage"
              },
              {
                "name": "token-exchange"
              },
              {
                "name": "map-roles-composite"
              }
            ]
          },
          {
            "name": "client.resource.96a02c99-c481-43c0-8d26-11303a2b2eaf",
            "type": "Client",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "49d27834-a17e-47cf-aa26-1c1843076dfa",
            "uris": [],
            "scopes": [
              {
                "name": "view"
              },
              {
                "name": "map-roles-client-scope"
              },
              {
                "name": "map-roles"
              },
              {
                "name": "configure"
              },
              {
                "name": "manage"
              },
              {
                "name": "token-exchange"
              },
              {
                "name": "map-roles-composite"
              }
            ]
          }
        ],
        "policies": [
          {
            "id": "04f72386-af49-4674-a608-1ebb0d5d2da9",
            "name": "manage.permission.client.96a02c99-c481-43c0-8d26-11303a2b2eaf",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.96a02c99-c481-43c0-8d26-11303a2b2eaf\"]",
              "scopes": "[\"manage\"]"
            }
          },
          {
            "id": "07dbf784-7efc-4f21-a1af-3a62eca378d0",
            "name": "token-exchange.permission.client.b5770ef7-394a-40fa-b436-5afc7724e886",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.b5770ef7-394a-40fa-b436-5afc7724e886\"]",
              "scopes": "[\"token-exchange\"]"
            }
          },
          {
            "id": "1d95bcb0-377e-47ea-ac41-fc0e71ef5276",
            "name": "token-exchange.permission.client.96a02c99-c481-43c0-8d26-11303a2b2eaf",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.96a02c99-c481-43c0-8d26-11303a2b2eaf\"]",
              "scopes": "[\"token-exchange\"]"
            }
          },
          {
            "id": "282b9688-b5c3-4f85-9e3a-0c9b84cbef6d",
            "name": "map-roles-composite.permission.client.b5770ef7-394a-40fa-b436-5afc7724e886",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.b5770ef7-394a-40fa-b436-5afc7724e886\"]",
              "scopes": "[\"map-roles-composite\"]"
            }
          },
          {
            "id": "301478a1-1a1a-4ffc-9903-579eb4c7cfe0",
            "name": "view.permission.client.96a02c99-c481-43c0-8d26-11303a2b2eaf",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.96a02c99-c481-43c0-8d26-11303a2b2eaf\"]",
              "scopes": "[\"view\"]"
            }
          },
          {
            "id": "61713bfe-9208-4f62-99f8-dd7bf6e28e10",
            "name": "map-roles-client-scope.permission.client.b5770ef7-394a-40fa-b436-5afc7724e886",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.b5770ef7-394a-40fa-b436-5afc7724e886\"]",
              "scopes": "[\"map-roles-client-scope\"]"
            }
          },
          {
            "id": "82b01e6c-837a-4b92-a148-f9d71ca6790d",
            "name": "map-roles.permission.client.96a02c99-c481-43c0-8d26-11303a2b2eaf",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.96a02c99-c481-43c0-8d26-11303a2b2eaf\"]",
              "scopes": "[\"map-roles\"]"
            }
          },
          {
            "id": "84bbb974-4aa0-4f64-add8-5cdadef16342",
            "name": "configure.permission.client.b5770ef7-394a-40fa-b436-5afc7724e886",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.b5770ef7-394a-40fa-b436-5afc7724e886\"]",
              "scopes": "[\"configure\"]"
            }
          },
          {
            "id": "911fc785-cb27-4b58-9a49-54c25b7e32b2",
            "name": "map-roles.permission.client.b5770ef7-394a-40fa-b436-5afc7724e886",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.b5770ef7-394a-40fa-b436-5afc7724e886\"]",
              "scopes": "[\"map-roles\"]"
            }
          },
          {
            "id": "9c6e22dc-b51e-45fe-b71a-5028736f0b7d",
            "name": "manage.permission.client.b5770ef7-394a-40fa-b436-5afc7724e886",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.b5770ef7-394a-40fa-b436-5afc7724e886\"]",
              "scopes": "[\"manage\"]"
            }
          },
          {
            "id": "a0079856-ba03-41e4-952f-135db2c469f5",
            "name": "map-roles-client-scope.permission.client.96a02c99-c481-43c0-8d26-11303a2b2eaf",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.96a02c99-c481-43c0-8d26-11303a2b2eaf\"]",
              "scopes": "[\"map-roles-client-scope\"]"
            }
          },
          {
            "id": "a45b185d-ddce-41a1-af47-0e1c43ddcbc6",
            "name": "view.permission.client.b5770ef7-394a-40fa-b436-5afc7724e886",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.b5770ef7-394a-40fa-b436-5afc7724e886\"]",
              "scopes": "[\"view\"]"
            }
          },
          {
            "id": "b29190a5-66c1-4712-b5ca-d261ba6b1877",
            "name": "configure.permission.client.96a02c99-c481-43c0-8d26-11303a2b2eaf",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.96a02c99-c481-43c0-8d26-11303a2b2eaf\"]",
              "scopes": "[\"configure\"]"
            }
          },
          {
            "id": "f394bb4c-71b1-4384-94eb-8515d4768016",
            "name": "map-roles-composite.permission.client.96a02c99-c481-43c0-8d26-11303a2b2eaf",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"client.resource.96a02c99-c481-43c0-8d26-11303a2b2eaf\"]",
              "scopes": "[\"map-roles-composite\"]"
            }
          }
        ],
        "scopes": [
          {
            "id": "0d5d1405-4b04-442d-ba43-64da63c3a8ae",
            "name": "map-role"
          },
          {
            "id": "13a47d5b-a712-452a-a3a0-d590c489c0c2",
            "name": "map-roles-client-scope"
          },
          {
            "id": "16472cca-178d-455c-a4db-4d334982c63c",
            "name": "map-role-composite"
          },
          {
            "id": "1fac098c-6c03-480d-a077-b7b05c50ac41",
            "name": "map-roles-composite"
          },
          {
            "id": "2631486f-dae4-46a7-8b7d-be228bc33694",
            "name": "map-roles"
          },
          {
            "id": "85371b1a-5fa7-4120-9432-9df1f479b748",
            "name": "token-exchange"
          },
          {
            "id": "a9820243-5c77-4a01-bd0d-9f8c7d7076d6",
            "name": "manage"
          },
          {
            "id": "ab5b4722-30aa-4182-87c9-322d6848fc05",
            "name": "manage-membership"
          },
          {
            "id": "bae60a98-4839-4ffa-b801-49d4a01f1a5e",
            "name": "map-role-client-scope"
          },
          {
            "id": "bca881d7-83f1-4a1a-be80-3c0a83839dfc",
            "name": "view"
          },
          {
            "id": "d94d86bf-4b45-4371-bfc8-a3183419768f",
            "name": "configure"
          },
          {
            "id": "db37961d-e11e-4c08-8793-c7def656c2c5",
            "name": "manage-members"
          },
          {
            "id": "def21841-92d9-4777-9813-40725f1fb4c2",
            "name": "view-members"
          }
        ],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "id": "b5770ef7-394a-40fa-b436-5afc7724e886",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/vacme/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/admin/vacme/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "0a43e748-7ae1-41ad-9739-43368b2d1be7",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [],
      "optionalClientScopes": []
    },
    {
      "id": "d48a70b0-2a17-426c-9361-646f1cccc62d",
      "clientId": "vacme-admin-client",
      "baseUrl": "/vacme-admin-client",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/vacme-admin-client/*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "deedb089-7400-4b21-8119-e92cdd55d9b5",
      "clientId": "vacme-initial-app-dev",
      "name": "Vacme Angular app",
      "description": "Client für  Angular Applikation",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "https://vacme-zh-dev.dvbern.ch/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://vacme-zh-dev.dvbern.ch/*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "login_theme": "vacme-zh",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "729190db-1c78-497c-8c61-9ece2738aafa",
          "name": "GroupMembershipMapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-group-membership-mapper",
          "consentRequired": false,
          "config": {
            "full.path": "false",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "memberof",
            "userinfo.token.claim": "false"
          }
        },
        {
          "id": "2630eb17-18ee-4a28-8768-1a3ffd531b27",
          "name": "MobileNummerMapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "MobileNummer",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "MobileNummer",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c638fef3-419c-470c-a998-227b467d170c",
      "clientId": "vacme-initial-app-localhost",
      "name": "Vacme Angular app",
      "description": "Client für  Angular Applikation",
      "rootUrl": "",
      "baseUrl": "http://localhost:4200/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "http://localhost:4200/*",
        "http://localhost:4222/*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "login_theme": "vacme",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "4ee5d04b-43b9-494d-b200-d6145e008c21",
          "name": "MobileNummerMapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "MobileNummer",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "MobileNummer",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c7a1a0d8-36de-46ab-845b-f73ed98ad6ae",
          "name": "GroupMembershipMapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-group-membership-mapper",
          "consentRequired": false,
          "config": {
            "full.path": "false",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "memberof",
            "userinfo.token.claim": "false"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f92908fd-439c-4bb5-80f1-b57dbba8a48b",
      "clientId": "vacme-rest-api-dev",
      "description": "vacme uat rest client",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "60d129d9-3db9-4862-8a34-ccedef64bfc0",
      "clientId": "vacme-rest-api-localhost",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "52c1c2f4-574d-4740-acae-b2a7bbf65285",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "cdb86f62-4e52-4e84-a2f4-25a507a7bc11",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "7149cf4b-051e-450f-9b87-d4e57b0a9fd5",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "b111e3a5-e44e-40d5-9ba2-b559e34cf69c",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "9ddd5dda-593a-4a60-bf4d-931dd0cfcfb8",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "c835a41b-e163-42cd-b2e0-ce7e4d4ad20e",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "6d0bd4a2-8a3a-4726-b5ee-b09c9dd477b8",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6d2d73eb-ea30-45de-9108-1dd3d72c98fc",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "c2717bf3-b17c-4c59-b7fd-b7aea359d33d",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "60b5d185-f319-4c28-a47d-4b50a00ef645",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "c6483f25-5a2e-4808-b052-1c2e1eb9cfac",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "df7018fd-c117-4c5e-a999-b071cb11d81d",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "d109177c-1fea-4458-bc6b-764607064923",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "45a9cbe1-befe-429c-b560-3f506ebe496f",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7fd5a92a-9078-498a-a99a-7645a30503c7",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2d0eebaa-f51b-4db1-be96-f552d9981be3",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ca34e957-c7ef-44bb-95a4-df2fd8b1b31a",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c1e548eb-055f-4214-a092-6a6fd6b73737",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ece8e063-e15e-43ca-9328-3e817b99d306",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ca02e2a2-1c4f-4e50-93de-2950b18fe73c",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "27410452-e4dd-458d-8f04-f1f5d835adbb",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6695bb03-a843-4a01-a764-d2368bb8c9a9",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "00762404-7cce-4a4c-bbaa-806882316298",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1f443183-32b5-4128-a736-54b82903b171",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "59792af8-73e2-47a5-b1fd-626b33104f7c",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "453c6ec5-fe37-4f8e-9a6e-87576bd0ce68",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f768e2b3-f824-4593-9d7e-105b9d3f6275",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "90769887-a968-4c92-9e4a-5418dc23fb72",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "36db25a2-bd30-47cb-9941-7fb5f1da085c",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "3f593e58-ef4d-45c0-8464-d44d866971e5",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "323cfa71-7bb7-4079-9c97-4316e7554577",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "d7ac9603-62a9-42be-843c-f7318735f8a4",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "8fa6c6e0-7afc-4b30-956d-d74607a154bf",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "9d43ace9-8caf-47b3-b503-b02936ce3ea9",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "7eebaeef-956a-42ab-8b29-d6357ffc27ca",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "roles",
    "email",
    "role_list",
    "web-origins",
    "profile"
  ],
  "defaultOptionalClientScopes": [
    "address",
    "phone",
    "offline_access",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {
    "starttls": "",
    "auth": "",
    "host": "sysmail.dvbern.ch",
    "from": "noreply-vacme-test@dvbern.ch",
    "fromDisplayName": "VacMe",
    "ssl": ""
  },
  "loginTheme": "vacme-zh",
  "accountTheme": "vacme-zh",
  "adminTheme": "vacme-zh",
  "emailTheme": "vacme-zh",
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "3832da5d-30f5-4b29-9212-f10e15f8b2f7",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "ab92ecba-1e45-495d-9b65-75ab0a298c9c",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "d0891b6e-221c-4198-a994-a445ad403201",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper"
          ]
        }
      },
      {
        "id": "15d8784a-0de1-45be-80bd-089b1e40388c",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "18911bb7-b754-4c43-a798-b87cc570b851",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "86858074-8b8b-47a1-a8d8-6aa8af0f00ca",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "66723fd0-7620-4b16-b8db-06fe394729e2",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "a6a04c37-e91b-449e-814f-43b920f0e6fd",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "636f54fe-c4bd-4ec0-aae6-c469645f73be",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "f9247c3e-f46b-41fd-91b9-4903c2051f49",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "7f006bf1-9c30-4bcd-ae62-c0c3d35f2b4b",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": true,
  "supportedLocales": [
    "de",
    "fr"
  ],
  "defaultLocale": "de",
  "authenticationFlows": [
    {
      "id": "b4afef4f-8e76-469f-a99c-cb76e4535021",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "827884fa-e760-4ade-a939-47447fabf100",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "basic-auth-otp",
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "requirement": "DISABLED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "d0aafec9-baf0-40b0-ae1d-3d2720265e0a",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "a7aecd66-c683-4060-998b-e96e81d64c39",
      "alias": "BrowserWithSMS",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "BrowserWithSMS forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "176ab3c7-ff25-4202-819b-35fbf28750f1",
      "alias": "BrowserWithSMS Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "7289e92e-76e7-4917-a258-d5f8cd730603",
      "alias": "BrowserWithSMS forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "BrowserWithSMS Browser - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        },
        {
          "authenticatorConfig": "smsAuthenticator",
          "authenticator": "sms-authentication",
          "requirement": "DISABLED",
          "priority": 21,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "46d09e83-e59c-47b3-9674-3cc643523b7b",
      "alias": "BrowserWithSMS-Swissphone",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "BrowserWithSMS-Swissphone BrowserWithSMS forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "2e878134-ded4-4a52-b90f-56a11d5e9a32",
      "alias": "BrowserWithSMS-Swissphone BrowserWithSMS Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "6ab99a7d-0116-4829-904e-0f3c0a37a655",
      "alias": "BrowserWithSMS-Swissphone BrowserWithSMS forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "BrowserWithSMS-Swissphone BrowserWithSMS Browser - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        },
        {
          "authenticatorConfig": "smsAuthenticator",
          "authenticator": "sms-authentication",
          "requirement": "REQUIRED",
          "priority": 21,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "a03c2815-9042-4b93-90ef-6731ab5815c3",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "a712b125-167e-430e-a7cc-004a890df6f5",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "8863d611-66f8-4080-9afc-d66c478aa29b",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "6fb74614-2127-43fc-849d-ccb34776ecca",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-otp",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "61f92aac-d5bc-4d9c-b752-42eb588cc854",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "7893a75f-42d8-42d0-8f41-b12a8e5525bd",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "93df0828-b886-4a1f-b2bb-1ec0adc9eb51",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "b1d0ef05-c81c-4c86-b987-43fbe628e81d",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-secret-jwt",
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-x509",
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "06e38fbf-3120-4bae-9d2c-3148312f1408",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 30,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "e5260608-44ad-4c4a-af57-07211ead0c45",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "044f41b7-4e1a-4638-b35c-1913550d4bdd",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "d3e8758c-196d-428a-95b5-1cd86539a490",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "2411b235-4479-4b8e-a6fd-ed5cb7eb4811",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "42f760b9-9e9f-41fb-aa86-4a67325df68c",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "ca93b168-b003-41ae-a773-cb88c719d675",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "f917f54e-9a31-4780-9ce1-150a0b769e47",
      "alias": "registrationWithSms",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registrationWithSms registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        },
        {
          "authenticatorConfig": "regWithSms",
          "authenticator": "sms-authentication",
          "requirement": "REQUIRED",
          "priority": 11,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "414bf4ad-c6ab-4cba-8441-d705e69787fa",
      "alias": "registrationWithSms registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "95401206-4d12-4b1e-81f4-de14d459e692",
      "alias": "registrationWithSmsSwissphone",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registrationWithSmsSwissphone registrationWithSms registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        },
        {
          "authenticatorConfig": "regWithSms",
          "authenticator": "sms-authentication",
          "requirement": "REQUIRED",
          "priority": 11,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "4f6e8ad8-86dc-4490-a984-4eaef1cb7fbf",
      "alias": "registrationWithSmsSwissphone registrationWithSms registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "02c37f1a-5778-4947-8a20-40c66b255a97",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-credential-email",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-password",
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 40,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "6d5d0f4a-bc66-4d86-be14-b26010a6dbe0",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "d4a3e451-e88e-4bf2-9442-16b2249431b7",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "64c91148-4466-4411-94ff-8d26cbe2a366",
      "alias": "regWithSms",
      "config": {
        "sms-auth.sms.clientjobid": "VacmeKeycloakBE",
        "sms-auth.sms.clientcallback": "VacMeLogin",
        "sms-auth.code.length": "6",
        "sms-auth.sms.gateway": "DEBUG_TO_CONSOLE",
        "sms-auth.sms.clienttoken": "",
        "sms-auth.sms.clientsecret": "",
        "sms-auth.code.ttl": "300"
      }
    },
    {
      "id": "23b883d0-f2ee-4169-9e67-6ea570ad09a0",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    },
    {
      "id": "cc81bf0d-6a48-4f7e-ab0f-aaddcad71bd6",
      "alias": "smsAuthenticator",
      "config": {
        "sms-auth.sms.clientjobid": "VacMeKeycloakBE",
        "sms-auth.sms.clientcallback": "VacMeLogin",
        "sms-auth.code.length": "6",
        "sms-auth.sms.gateway": "DEBUG_TO_CONSOLE",
        "sms-auth.sms.clienttoken": "",
        "sms-auth.sms.clientsecret": "",
        "sms-auth.code.ttl": "300"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": false,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "BrowserWithSMS-Swissphone",
  "registrationFlow": "registrationWithSmsSwissphone",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0"
  },
  "keycloakVersion": "11.0.3",
  "userManagedAccessAllowed": false
},
  {
    "id": "vacme-web",
    "realm": "vacme-web",
    "displayName": "VacMe Fachanwendung",
    "notBefore": 0,
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": true,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "dc9c71a6-3e4c-4f4b-b8b1-009a2b46a8a0",
          "name": "OI_LOGISTIK_REPORTER",
          "description": "Logistik-Reports, z.B. anstehende Impfungen, Termine, …",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "16a90d20-8b3a-432f-8944-89e97ca048f8",
          "name": "OI_IMPFVERANTWORTUNG",
          "description": "Haben Einsicht auf alle Registrationen und Impfungen des Ortes der Impfung. Haben medizinische Verantwortung.",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "73658aba-51a9-4369-ba28-d00b95f3bc4d",
          "name": "ApplikationsSupport",
          "composite": true,
          "composites": {
            "realm": [
              "AS_BENUTZER_VERWALTER",
              "AS_REGISTRATION_OI"
            ]
          },
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "643c3ddc-6a4c-414d-9af1-396aaeebbc97",
          "name": "Personal Aufsicht",
          "composite": true,
          "composites": {
            "realm": [
              "KT_LOGISTIK_REPORTER",
              "KT_MEDIZINISCHER_REPORTER"
            ]
          },
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "753f3033-459a-4c56-a696-f631f45a6a80",
          "name": "KT_BENUTZER_VERWALTER",
          "description": "Koennen Kantonsbenutzer verwalten.",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "760906f8-008d-4fbc-a457-536ddd12fcb1",
          "name": "Personal",
          "composite": true,
          "composites": {
            "realm": [
              "OI_KONTROLLE"
            ]
          },
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "138a833f-e27c-4bc0-971a-70324dab2073",
          "name": "Organisationsverantwortung",
          "composite": true,
          "composites": {
            "realm": [
              "OI_KONTROLLE",
              "OI_ORT_VERWALTER",
              "OI_BENUTZER_REPORTER",
              "OI_LOGISTIK_REPORTER",
              "OI_MEDIZINISCHER_REPORTER",
              "OI_DOKUMENTATION",
              "OI_BENUTZER_VERWALTER"
            ]
          },
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "8a216993-22f0-495c-81ad-da344691e8e5",
          "name": "Admin",
          "composite": true,
          "composites": {
            "realm": [
              "KT_LOGISTIK_REPORTER",
              "KT_MEDIZINISCHER_REPORTER",
              "KT_BENUTZER_VERWALTER",
              "KT_BENUTZER_REPORTER"
            ]
          },
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "410e3176-8846-4148-b39e-8ecd5a14c4fe",
          "name": "Fachpersonal",
          "composite": true,
          "composites": {
            "realm": [
              "OI_KONTROLLE",
              "OI_DOKUMENTATION"
            ]
          },
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "ea636afa-5ad4-40ae-9edd-deb8162ee89b",
          "name": "Fachsupervision",
          "composite": true,
          "composites": {
            "realm": [
              "OI_KONTROLLE",
              "OI_LOGISTIK_REPORTER",
              "OI_MEDIZINISCHER_REPORTER",
              "OI_DOKUMENTATION"
            ]
          },
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "999bfde9-e4cd-4310-aad8-8fee81b0d2fa",
          "name": "OI_ORT_VERWALTER",
          "description": "Können den Ort der Impfung inklusive der Terminslots vewalten.",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "f94d6002-64b5-4934-b5dd-b4490b2e671f",
          "name": "OI_BENUTZER_VERWALTER",
          "description": "Können Benutzer des Ortes der Impfung verwalten.",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "729e3f94-b3e3-4b1a-b20c-e7d18d0032f5",
          "name": "Organisationssupervision",
          "composite": true,
          "composites": {
            "realm": [
              "OI_KONTROLLE",
              "OI_ORT_VERWALTER",
              "OI_LOGISTIK_REPORTER",
              "OI_MEDIZINISCHER_REPORTER",
              "OI_DOKUMENTATION"
            ]
          },
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "15f206ed-b6c0-442b-b3f8-8fd4ecfeb49d",
          "name": "Fachverantwortung BAB",
          "description": "Fachverantwortung BAB",
          "composite": true,
          "composites": {
            "realm": [
              "OI_KONTROLLE",
              "OI_IMPFVERANTWORTUNG",
              "OI_ORT_VERWALTER",
              "OI_BENUTZER_REPORTER",
              "OI_LOGISTIK_REPORTER",
              "OI_MEDIZINISCHER_REPORTER",
              "OI_DOKUMENTATION",
              "OI_BENUTZER_VERWALTER"
            ]
          },
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "d31e8d19-29cc-4e94-ab69-fe89678a0eb5",
          "name": "AS_BENUTZER_VERWALTER",
          "description": "Können sämtliche Benutzer verwalten.",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "8464b47f-21f4-4aaf-a151-796adcf9a0b4",
          "name": "KT_BENUTZER_REPORTER",
          "description": "Reports zu den VacMe-Benutzern",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "2550ad6e-e22e-47e7-adff-f574072d60d2",
          "name": "OI_DOKUMENTATION",
          "description": "Dokumentieren die Impfungen 1 und 2",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "82440be3-442c-438d-b19a-230309e715c6",
          "name": "Personal Telefon",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "79b0e471-d700-462d-abae-8f1637d44b39",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "4255dc15-7564-4593-b17f-635742c9e91b",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "7e0c6b07-2e19-4922-b32b-e57f52ad196b",
          "name": "Fachverantwortung Aufsicht",
          "composite": true,
          "composites": {
            "realm": [
              "KT_LOGISTIK_REPORTER",
              "KT_MEDIZINISCHER_REPORTER",
              "KT_IMPFVERANTWORTUNG",
              "KT_BENUTZER_VERWALTER",
              "KT_BENUTZER_REPORTER"
            ]
          },
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "ec52ec79-789e-4157-9b97-e8611a3acad7",
          "name": "OI_KONTROLLE",
          "description": "Kontrollieren die Personendaten zu einer Registrationsnummer oder erfassen eine neue Registration.",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "e6fa99f4-d71c-4908-bc54-7cbe8eafa4dc",
          "name": "OI_BENUTZER_REPORTER",
          "description": "Reports zu den VacMe-Benutzern des Ortes der Impfung",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "3a421c9e-6961-438e-9ded-49c894e04966",
          "name": "AS_REGISTRATION_OI",
          "description": "Koennen neue Ort der Impfungen anlegen.",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "9945c42f-65f0-42ae-9b04-40cb3945b80c",
          "name": "KT_IMPFVERANTWORTUNG",
          "description": "Haben Einsicht auf alle Registrationen und Impfungen. Haben medizinische Verantwortung.",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "1af947ce-8a6b-4ac5-a599-9ed3ff936de7",
          "name": "KT_LOGISTIK_REPORTER",
          "description": "Logistik-Reports, z.B. anstehende Impfungen, Termine, …",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "d48085f1-4823-41e1-93dc-97b6d3cabc98",
          "name": "OI_MEDIZINISCHER_REPORTER",
          "description": "Medizinische Reports",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        },
        {
          "id": "2c1c5490-1735-42aa-b742-525cf364712a",
          "name": "KT_MEDIZINISCHER_REPORTER",
          "description": "Medizinische Reports",
          "composite": false,
          "clientRole": false,
          "containerId": "vacme-web",
          "attributes": {}
        }
      ],
      "client": {
        "realm-management": [
          {
            "id": "35e4311e-f89c-4099-b15c-79afe43b0e68",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "41eebd15-4071-4ec5-b97f-a76d105babd9",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "2002e740-4a0e-4bb9-8032-da83c47a4e2f",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "202ca142-d842-49b5-91ed-eb4a502845f5",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "b056319b-c97a-4d0c-b516-c6e451f0cc75",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "06b46bee-a607-4a6b-b5fe-d47651f8645d",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-users",
                  "manage-events",
                  "view-clients",
                  "manage-users",
                  "query-clients",
                  "manage-clients",
                  "manage-realm",
                  "view-identity-providers",
                  "create-client",
                  "view-authorization",
                  "manage-identity-providers",
                  "manage-authorization",
                  "query-realms",
                  "view-users",
                  "view-events",
                  "impersonation",
                  "view-realm",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "2d476c9b-dfea-4dfd-a02b-3759c5328544",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "74a5e899-4041-4bbe-bb61-a2a1cef0fd1e",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "7e78e361-d881-4d31-926c-43b6af0360be",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "8a1f377e-da4c-42a5-a08d-62269fd3b52d",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "54a1af56-1108-4dbf-8756-454fd16297dc",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "4756eae6-0441-45d3-b7c1-82cbfcc10010",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "c72761f0-4651-42ee-866f-e8b822b6fad8",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "6f91902f-3e68-4eb4-a171-a273fb7b9ee6",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "2d634aec-2d3f-40b6-8390-c6d3aada464e",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "19bebaca-9546-4cb0-8b19-33311059f178",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "8581000d-f3ef-43be-9124-c1c1066928a2",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "8f9d22e4-79e0-44ad-a53b-e71049af453d",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          },
          {
            "id": "b8bd604e-ca1d-49b1-a484-58ef1ad53021",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "23f51239-c08f-4759-b35a-934287fd3dc5",
            "attributes": {}
          }
        ],
        "vacme-web-app-dev": [],
        "vacme-rest-api-web-dev": [],
        "security-admin-console": [],
        "vacme-admin-client": [],
        "admin-cli": [],
        "account-console": [],
        "vacme-web-app-localhost": [],
        "broker": [
          {
            "id": "195291b0-ae67-477a-9383-0bcca3cb7ae3",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "e4606145-988f-4bcc-80ed-048f026405a4",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "ce346d37-d557-4ef9-97f6-19d7aec9d0b6",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "aee2ae5b-8ca2-4f9b-8fee-e5ce8a7c29f8",
            "attributes": {}
          },
          {
            "id": "93656bad-e57b-4a60-b60e-f5ca71dbd318",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "aee2ae5b-8ca2-4f9b-8fee-e5ce8a7c29f8",
            "attributes": {}
          },
          {
            "id": "be8f7e27-c795-4ab8-bff5-636247c1af76",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "aee2ae5b-8ca2-4f9b-8fee-e5ce8a7c29f8",
            "attributes": {}
          },
          {
            "id": "e5556ab3-ffa9-4d3a-ab27-7378f9a19416",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "aee2ae5b-8ca2-4f9b-8fee-e5ce8a7c29f8",
            "attributes": {}
          },
          {
            "id": "faebfffe-0e6c-417c-84a8-943f52621785",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "aee2ae5b-8ca2-4f9b-8fee-e5ce8a7c29f8",
            "attributes": {}
          },
          {
            "id": "229e77ae-97d5-4a01-b306-7a795f0a2ead",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "aee2ae5b-8ca2-4f9b-8fee-e5ce8a7c29f8",
            "attributes": {}
          }
        ],
        "vacme-rest-api-web-localhost": []
      }
    },
    "groups": [
      {
        "id": "4523f4f3-6544-4517-8535-169ddcb3e903",
        "name": "Arzt",
        "path": "/Arzt",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "ccd50ca3-63b8-4c62-ac11-3b93a7408382",
        "name": "Arzt Hallo",
        "path": "/Arzt Hallo",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "5b87f030-b5c1-4b20-9e42-cd8ac04998f1",
        "name": "ArztDrehbuch18",
        "path": "/ArztDrehbuch18",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "85e96752-af0a-4ea2-a217-1fb3ea5d53af",
        "name": "DVB Testimpfzentrum 21",
        "path": "/DVB Testimpfzentrum 21",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "202e1a93-930f-479f-b1d0-3195107e0001",
        "name": "GapaTestC",
        "path": "/GapaTestC",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "3d1e1c2a-1057-4f6f-9494-7baebe3b408e",
        "name": "Impfzentrum Import Hallo",
        "path": "/Impfzentrum Import Hallo",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "3187beec-9429-4db5-a11d-e0dc0802219a",
        "name": "ImpfzentrumDrehbuch18",
        "path": "/ImpfzentrumDrehbuch18",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "af8234a0-f54c-496c-843a-ed58b51ca6c4",
        "name": "Impzentrum D",
        "path": "/Impzentrum D",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "6b7fd715-6e7a-43aa-955b-be73facaf45c",
        "name": "MobilDrehbuch2",
        "path": "/MobilDrehbuch2",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "e53a27d9-3de9-463d-aa6c-03cc8245f9e7",
        "name": "MobilesTeamDrehbuch18",
        "path": "/MobilesTeamDrehbuch18",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "d7efa9fc-cdbd-4a19-a727-c96d25b12d6d",
        "name": "Reber Spital",
        "path": "/Reber Spital",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "4d092a86-8929-448a-908c-1b2b426f9ce9",
        "name": "ReberImpfzentrum",
        "path": "/ReberImpfzentrum",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "a59ab0d7-7751-4951-b45b-1fa6a330080e",
        "name": "YYYY",
        "path": "/YYYY",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "821c77d6-5f3c-4821-adcd-445a9834c87c",
        "name": "ZZZZ",
        "path": "/ZZZZ",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "3e682ca1-59e4-4828-b8f7-c0ecbb85e066",
        "name": "ZueriArzt",
        "path": "/ZueriArzt",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "7efc185b-1181-4113-81aa-ecc58c888c35",
        "name": "dvbu2",
        "path": "/dvbu2",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "2cf55903-20c0-44e2-a58f-3083ae404e62",
        "name": "fgfdggfdfd",
        "path": "/fgfdggfdfd",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "4215e52e-7f36-4507-9cea-97a8cf25b66a",
        "name": "ghgjhghjh",
        "path": "/ghgjhghjh",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "343b7bb0-eee0-47be-87a9-34f11afa2018",
        "name": "insel",
        "path": "/insel",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "2078307c-c9aa-446a-939e-c9c6bf664dae",
        "name": "insel2",
        "path": "/insel2",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "4056dab6-21b7-406f-82d1-722c31779cd0",
        "name": "test",
        "path": "/test",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "448812f6-4a41-4136-aa29-a762d440e827",
        "name": "testcenter1",
        "path": "/testcenter1",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "7c23d4f6-4d75-4669-8fe5-19efe298bc09",
        "name": "ui1",
        "path": "/ui1",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "616c7e6e-d3a0-4b4b-b8a9-6422162c3215",
        "name": "wijo-mobil",
        "path": "/wijo-mobil",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "f4361721-c06a-4966-ae8d-c736c025af20",
        "name": "wwww",
        "path": "/wwww",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "87b0a6a8-babd-4954-8429-9c32ee3c7580",
        "name": "xaversODI",
        "path": "/xaversODI",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      },
      {
        "id": "167722f4-d4b4-4859-a936-78337960b06a",
        "name": "xxxxxx",
        "path": "/xxxxxx",
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {},
        "subGroups": []
      }
    ],
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpSupportedApplications": [
      "FreeOTP",
      "Google Authenticator"
    ],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "aee2ae5b-8ca2-4f9b-8fee-e5ce8a7c29f8",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/vacme-web/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "defaultRoles": [
          "view-profile",
          "manage-account"
        ],
        "redirectUris": [
          "/realms/vacme-web/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "7a97601e-10b1-478c-a397-19eee6e29f0c",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/vacme-web/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [
          "/realms/vacme-web/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "f82061a3-7e1b-45c1-9471-3edaefcd6984",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "fa31cf8e-aafa-48d4-b82e-991d30eff35c",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "e4606145-988f-4bcc-80ed-048f026405a4",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "23f51239-c08f-4759-b35a-934287fd3dc5",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "706a5d83-bbd2-47d5-8a46-f77bf66954fe",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/vacme-web/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [
          "/admin/vacme-web/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "acb3ab2e-ac14-42c0-bab8-c3d47edb00a3",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "4e5c39ec-e654-4b0c-87df-771571e9525f",
        "clientId": "vacme-admin-client",
        "baseUrl": "/vacme-admin-client",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [
          "/vacme-admin-client/*"
        ],
        "webOrigins": [
          "*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "login_theme": "vacme",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "exclude.session.state.from.auth.response": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "cddc0302-a7c9-42f5-bcde-03aacc5536c5",
        "clientId": "vacme-rest-api-web-dev",
        "description": "vacme rest api fuer vacme-web auf dev Umgebung fuer zuerich",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "exclude.session.state.from.auth.response": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "1adfc960-10c3-4400-87e3-82da57c76fc0",
        "clientId": "vacme-rest-api-web-localhost",
        "description": "Client fuer das REST API der Fachapplikation",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "exclude.session.state.from.auth.response": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "931ccaab-d83a-4e51-8ec4-d7c00d568a62",
        "clientId": "vacme-web-app-dev",
        "name": "Vacme - web Angular app",
        "description": "Client für  Angular Applikation",
        "rootUrl": "",
        "adminUrl": "",
        "baseUrl": "https://impfen-vacme-zh-dev.dvbern.ch",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [
          "https://impfen-vacme-zh-dev.dvbern.ch/*"
        ],
        "webOrigins": [
          "*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "exclude.session.state.from.auth.response": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "37d1e695-7d6e-432b-8816-78dbd660cca5",
            "name": "GroupMembershipMapper",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-group-membership-mapper",
            "consentRequired": false,
            "config": {
              "full.path": "false",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "memberof",
              "userinfo.token.claim": "false"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "114da5f6-bfcf-41fb-982a-c61ccdb8b470",
        "clientId": "vacme-web-app-localhost",
        "description": "Angular Client fuer die dev  Umgebung",
        "rootUrl": "",
        "adminUrl": "",
        "baseUrl": "http://localhost:4222",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [
          "http://localhost:4222/*"
        ],
        "webOrigins": [
          "*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "exclude.session.state.from.auth.response": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "b20b7d59-d0f0-4ca5-9823-a31634620e76",
            "name": "MobileNummerMapper",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "MobileNummer",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "MobileNummer",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6607cc1e-afb0-4495-8558-db996cfb54cf",
            "name": "Groupmapper",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-group-membership-mapper",
            "consentRequired": false,
            "config": {
              "full.path": "false",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "memberof",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "4ed6943b-5b5b-4f4c-8986-ff638d84c7a7",
            "name": "GlnNummerMapper",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "GlnNummer",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gln",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "a1a777f2-fbce-4141-a398-982589714160",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "6bcc4fda-1598-466d-b515-80458c07b4d8",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "5872f590-6fa4-43df-ad3f-23d83a547b5c",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "7d20458d-38c8-4c92-abaa-1007d29d1c61",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "fa87bd7d-58c9-4b45-b284-c361d1904c3e",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "ccdf3a12-7bc3-4f38-8d08-58f8786dad5f",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "71eec7f0-2e5d-467e-a40e-dc17dd0bcacf",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "multivalued": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e65d977d-e929-4a8f-8445-0e74b9cbac8d",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "6ad7ab42-35ea-47af-8c5d-1a37d2541f56",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "8885ab50-827b-4e82-9bce-8f0c27fa5e41",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "4247ceae-10d1-4136-8e0b-302de22413e5",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5833024c-5fa3-4fcc-93ee-690c44f37107",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "63da27db-b8e4-425c-8ef8-558b922d99e9",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "5eaa0bbd-755b-442d-bbdf-0fffeda3fb8a",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0641ef7d-8e3f-4988-8aa4-a60bfdac4114",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c2aa6c1d-3472-41b9-845e-9079f07791d4",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "83b464f0-6301-46e5-8584-43b8a138eabf",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0b6b1da0-bffb-474d-a1ba-d4409ab439f5",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5cc83839-5f7d-45ae-96cb-960f0b9bac8c",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "87acea79-e6fe-416e-a1fd-87e78505c54c",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "3340fc2b-4e97-4bfe-81a6-b9265f1a6b78",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "8816342a-8bfa-4002-baf7-619526c6c01b",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "fe9feb1b-e88c-4eda-9c3b-f01d4b733bb3",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "String"
            }
          },
          {
            "id": "3eebc85f-972c-4d2b-8820-10a198e1340f",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a4d84e07-06f9-4064-90da-6a0c5632daf3",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "56af9aab-f37b-48c7-8e4f-25464c8e8771",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6ef6af8a-c98e-4560-a397-a17f373ce5d3",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "0a07aceb-eb25-4410-b5ee-0fc7cc9df75d",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "17f58976-40ca-4f6b-885e-d932949e5c1c",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "77f19301-0d59-4a77-9e1c-53e41f1d983d",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "ce53d6e3-d959-4c79-bedb-b2731fcb1d46",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "d97d0f2f-c82f-4d7b-8204-091b40e20266",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          },
          {
            "id": "e3900fb6-8e9c-4734-b71a-ca2d89a5230f",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "a5e7ce4e-d176-4cff-8ce8-3dad8fca3b33",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "113642c1-9999-4620-94a1-ec76d704644e",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "email",
      "profile",
      "roles",
      "web-origins"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "phone",
      "address",
      "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {
      "host": "mx.vacme.ch",
      "from": "noreply-vacme-test@dvbern.ch",
      "starttls": "",
      "auth": "",
      "ssl": ""
    },
    "loginTheme": "vacme-zh",
    "accountTheme": "vacme-zh",
    "adminTheme": "vacme-zh",
    "emailTheme": "vacme-zh",
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [
      "SEND_RESET_PASSWORD",
      "UPDATE_CONSENT_ERROR",
      "GRANT_CONSENT",
      "REMOVE_TOTP",
      "REVOKE_GRANT",
      "UPDATE_TOTP",
      "LOGIN_ERROR",
      "CLIENT_LOGIN",
      "RESET_PASSWORD_ERROR",
      "IMPERSONATE_ERROR",
      "CODE_TO_TOKEN_ERROR",
      "CUSTOM_REQUIRED_ACTION",
      "RESTART_AUTHENTICATION",
      "IMPERSONATE",
      "UPDATE_PROFILE_ERROR",
      "LOGIN",
      "UPDATE_PASSWORD_ERROR",
      "CLIENT_INITIATED_ACCOUNT_LINKING",
      "TOKEN_EXCHANGE",
      "LOGOUT",
      "REGISTER",
      "CLIENT_REGISTER",
      "IDENTITY_PROVIDER_LINK_ACCOUNT",
      "UPDATE_PASSWORD",
      "CLIENT_DELETE",
      "FEDERATED_IDENTITY_LINK_ERROR",
      "IDENTITY_PROVIDER_FIRST_LOGIN",
      "CLIENT_DELETE_ERROR",
      "VERIFY_EMAIL",
      "CLIENT_LOGIN_ERROR",
      "RESTART_AUTHENTICATION_ERROR",
      "EXECUTE_ACTIONS",
      "REMOVE_FEDERATED_IDENTITY_ERROR",
      "TOKEN_EXCHANGE_ERROR",
      "PERMISSION_TOKEN",
      "SEND_IDENTITY_PROVIDER_LINK_ERROR",
      "EXECUTE_ACTION_TOKEN_ERROR",
      "SEND_VERIFY_EMAIL",
      "EXECUTE_ACTIONS_ERROR",
      "REMOVE_FEDERATED_IDENTITY",
      "IDENTITY_PROVIDER_POST_LOGIN",
      "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
      "UPDATE_EMAIL",
      "REGISTER_ERROR",
      "REVOKE_GRANT_ERROR",
      "EXECUTE_ACTION_TOKEN",
      "LOGOUT_ERROR",
      "UPDATE_EMAIL_ERROR",
      "CLIENT_UPDATE_ERROR",
      "UPDATE_PROFILE",
      "CLIENT_REGISTER_ERROR",
      "FEDERATED_IDENTITY_LINK",
      "SEND_IDENTITY_PROVIDER_LINK",
      "SEND_VERIFY_EMAIL_ERROR",
      "RESET_PASSWORD",
      "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
      "UPDATE_CONSENT",
      "REMOVE_TOTP_ERROR",
      "VERIFY_EMAIL_ERROR",
      "SEND_RESET_PASSWORD_ERROR",
      "CLIENT_UPDATE",
      "CUSTOM_REQUIRED_ACTION_ERROR",
      "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
      "UPDATE_TOTP_ERROR",
      "CODE_TO_TOKEN",
      "GRANT_CONSENT_ERROR",
      "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
    ],
    "adminEventsEnabled": true,
    "adminEventsDetailsEnabled": false,
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "c472789b-3f0f-4b76-8f64-35dc6bd51944",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-address-mapper",
              "saml-user-property-mapper",
              "saml-role-list-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-user-attribute-mapper",
              "oidc-full-name-mapper"
            ]
          }
        },
        {
          "id": "68d7f030-d24b-4193-b9a4-b63824c1c823",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "e5907f04-621c-472d-aa6e-619e6ac52fae",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "c7226456-dc5d-4dbe-9044-0695a77fd69e",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-attribute-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-address-mapper",
              "saml-user-property-mapper",
              "oidc-full-name-mapper",
              "saml-role-list-mapper",
              "oidc-usermodel-attribute-mapper"
            ]
          }
        },
        {
          "id": "f51809bb-c864-4e33-b4c0-35a0f8782a52",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "630ae56f-10b9-44f2-ae03-971e34493711",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "28a92675-06dd-4776-a843-459207d4523b",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "bdf7419c-8792-431d-acde-cf61b7ac51a1",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "5b89e6e1-d216-4a8d-b125-d4f460a194f1",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "6c3ee7d9-7ee0-41c0-a6ae-4dcd850711f1",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS256"
            ]
          }
        },
        {
          "id": "d4dacfa8-988d-4684-8385-73fcd82a8982",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": true,
    "supportedLocales": [
      "de",
      "fr"
    ],
    "defaultLocale": "de",
    "authenticationFlows": [
      {
        "id": "09e47622-cbe0-4827-97ca-923d4d7f545f",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "c088c9d3-ca3a-4cec-a5a2-be326408e5b0",
        "alias": "Authentication Options",
        "description": "Authentication options.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "basic-auth",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "basic-auth-otp",
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "11764d3a-7013-4423-8a71-dbb45bd4d450",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "31c11353-5a59-450c-8f6b-2ba400f7c892",
        "alias": "BrowserWithSMS",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": false,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "flowAlias": "BrowserWithSMS forms",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "d19a97ff-152e-451c-b233-38db0be015b8",
        "alias": "BrowserWithSMS Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": false,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "fbc92a21-4c6c-4f0c-a4ad-2f94555bc757",
        "alias": "BrowserWithSMS forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": false,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "BrowserWithSMS Browser - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          },
          {
            "authenticatorConfig": "smsAuthWeb",
            "authenticator": "sms-authentication",
            "requirement": "DISABLED",
            "priority": 21,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "2b5e259e-0f0c-4176-81a6-3fc971ceabf5",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "44a73a32-85fd-4de9-8045-6ee222979825",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "f52baa8b-2923-422a-867b-36fce1b8d066",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "732a4248-fce2-4bc4-a34f-c7fc1b58b95d",
        "alias": "RegistrationSMS",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": false,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "flowAlias": "RegistrationSMS registration form",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          },
          {
            "authenticatorConfig": "smsAuthRegWeb",
            "authenticator": "sms-authentication",
            "requirement": "REQUIRED",
            "priority": 11,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "12e5f018-6315-42f7-9e78-244cd0823c59",
        "alias": "RegistrationSMS registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": false,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-profile-action",
            "requirement": "REQUIRED",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-password-action",
            "requirement": "REQUIRED",
            "priority": 50,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "requirement": "DISABLED",
            "priority": 60,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "83934dd6-e73e-4b3b-9a6a-8675f665de44",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-otp",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "f8e4de91-8346-4d41-a0c4-9170c6e8dae5",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "8c27a762-3e51-47df-a86a-f3903cea2670",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "19f905a0-234a-48a1-9bdb-ccc61007f485",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "flowAlias": "forms",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "e67f7d3e-7944-489f-8311-bf8bd1c50bed",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-jwt",
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-secret-jwt",
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-x509",
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "1ba16d30-002d-409f-a87b-d92dc3594ded",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 30,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "2af8fdf0-5095-4216-9ef9-a10ffb50d063",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "2a9d4c98-7a0d-4aa5-9598-e3a5882dc755",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "86128bda-ce5f-4ead-8811-afea59a39c0d",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "8f0148aa-bbe6-42fa-91eb-9df34c05efcb",
        "alias": "http challenge",
        "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "no-cookie-redirect",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Authentication Options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "74510f79-10a1-41ff-b93e-f6e9ed4aa848",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "flowAlias": "registration form",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "d46628c2-ba58-4177-ae7d-7265f69427e1",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-profile-action",
            "requirement": "REQUIRED",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-password-action",
            "requirement": "REQUIRED",
            "priority": 50,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "requirement": "DISABLED",
            "priority": 60,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "5ac1c842-466d-476f-b5e5-186a49840b36",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-credential-email",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-password",
            "requirement": "REQUIRED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 40,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "055a4886-c79d-4d65-9446-b37354112bc8",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "c4ee3178-34af-4ade-b84a-3984d44de88c",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "0f8df544-eecc-43eb-a37e-c0be7c9c69a4",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      },
      {
        "id": "1ae41e5e-391a-4781-9194-9c1d34872349",
        "alias": "smsAuthRegWeb",
        "config": {
          "sms-auth.sms.clientjobid": "VacmeKeycloakBE",
          "sms-auth.sms.clientcallback": "VacMeLogin",
          "sms-auth.code.length": "6",
          "sms-auth.sms.gateway": "DEBUG_TO_CONSOLE",
          "sms-auth.sms.clienttoken": "",
          "sms-auth.sms.clientsecret": "",
          "sms-auth.code.ttl": "300"
        }
      },
      {
        "id": "39a28362-4e18-41e5-bd12-49bf17c14c9c",
        "alias": "smsAuthWeb",
        "config": {
          "sms-auth.sms.clientjobid": "VacmeKeycloakBE",
          "sms-auth.sms.clientcallback": "VacMeLogin",
          "sms-auth.code.length": "6",
          "sms-auth.sms.gateway": "DEBUG_TO_CONSOLE",
          "sms-auth.sms.clienttoken": "",
          "sms-auth.sms.clientsecret": "",
          "sms-auth.code.ttl": "300"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "terms_and_conditions",
        "name": "Terms and Conditions",
        "providerId": "terms_and_conditions",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
      "clientOfflineSessionMaxLifespan": "0",
      "clientSessionIdleTimeout": "0",
      "clientSessionMaxLifespan": "0",
      "clientOfflineSessionIdleTimeout": "0"
    },
    "keycloakVersion": "11.0.3",
    "userManagedAccessAllowed": false
  }
]