quarkus.application.name=vacme-rest-dummy
vacme.stufe=LOCAL
vacme.mandant=BE
vacme.fachapplikation.url=http://dev-h2testing.dvbern.ch/fachapplikation
vacme.fachapplikation.blog.url=http://dev-h2testing.dvbern.ch/blog
vacme.admin.mail=h2dummy@mailbucket.dvbern.ch
vacme.sls.mail=h2dummysls@mailbucket.dvbern.ch
vacme.cc.zuwenige.zweittermine.mail=dev-h2test-zuwenig2termine@mailbucket.dvbern.ch
vacme.mail.reporting.callenter.disabled=true
vacme.service.reporting.anzahlerstimpfungen.mail=itDummyMailempfErestimpfungen@mailbucket.dvbern.ch
vacme.service.reporting.anzahl.impfungen.fsme.galenica.recipients=itDummyMailempfErestimpfungen@mailbucket.dvbern.ch
vacme.mail.reporting.anzahlimpfungen.disabled=true
vacme.service.reporting.anzahlzweitbooster.mail=itDummyMailempfErestimpfungen@mailbucket.dvbern.ch
vacme.mail.reporting.anzahlzweitbooster.disabled=true
vacme.mail.reporting.anzahl.impfungen.disabled=true
vacme.min.impftermin.for.meldung=9


vacme.force.cookie.secure.flag=false

quarkus.datasource.jdbc.max-size=80
quarkus.datasource.jdbc.acquisition-timeout=8
quarkus.datasource.jdbc.background-validation-interval=10s

# increase worker pool size
quarkus.vertx.worker-pool-size=30

# increase maximum body request size
quarkus.http.limits.max-body-size=21m

# metrics
quarkus.datasource.metrics.enabled=true
quarkus.datasource.jdbc.enable-metrics=true

# drop and create the database at startup (use `update` to only update the schema, drop-and-create to recreate)
quarkus.hibernate-orm.database.generation=none

# Let's make sure we don't wipe the production data by accident!
quarkus.hibernate-orm.sql-load-script=no-file
#quarkus.oidc.client-id=vacme-rest-api
vacme.keycloak.config.reg=local-semreg-dvbern-ch_reg_local_keycloak.json
vacme.keycloak.config.web=local-semreg-dvbern-ch_web_local_keycloak.json
quarkus.oidc.enabled=true


# quarkus.oidc.auth-server-url=https://vacme-dev.dvbern.ch/auth/realms/vacme
quarkus.oidc.auth-server-url=http://h2dbprofileunusedappweb.quarkustest.dvbern.ch
quarkus.oidc.client-id=h2dbprofileunused
quarkus.oidc.reg.auth-server-url=http://h2dbprofileunusedappreg.quarkustest.dvbern.ch
quarkus.oidc.reg.client-id=h2dbprofileunused
#quarkus.oidc.reg.token.lifespan-grace=5s


#pfad im json wo das rollenarray drin steht
#quarkus.oidc.roles.role-claim-path=realm_access.roles

#This means that requests with an invalid credential will always be rejected, even for public pages. You can change this behavior and only authenticate when required by setting \
quarkus.http.auth.proactive=false

# Health endpoint
quarkus.smallrye-health.root-path=/health

# Health query timeout
vacme.healthcheck.query.timeout=290


#Disable all security
vacme.authorization.disable=false
vacme.validation.kontrolle.disallow.sameday=true
vacme.validation.impfung.disallow.sameday=true

# Gueltigkeit der Kontrolle in Stunden
vacme.kontrolle.gueltigkeit.hours=4

# CRON jobs
vacme.cron.stat.kennzahlrunner=0 0 */12 * * ?
vacme.cron.stat.dbvalidation=0 0 23 * * ?
vacme.cron.healthcheck.zertifikat.job.lock=0 0 */6 * * ?
vacme.cron.healthcheck.geocoding=0 0 0 * * ?
vacme.cron.stat.vmdl.upload=0 0/1 2-6 * * ?
vacme.cron.callcenter.kennzahlen.mail=0 0 1 * * ?
vacme.cron.service.reporting.anzahlerstimpfungen.mail=0 10 2 1 * ?
vacme.cron.reservierung.expired.clear=0 20 2 * * ?
vacme.cron.clear.covidcert.tokens=0 0 3 * * ?
vacme.cron.disable.unused.users=0 30 3 * * ?
vacme.cron.handle.kontrolle.abgelaufen=0 */15 * * * ?
vacme.cron.booster.immunisiert.status.move=0 */5 * * * ?

# FreigabeBooster: von 8-18
vacme.cron.booster.freigabe.status.move=0 */5 8-18 * * ?
vacme.cron.booster.engine.recalculate=0 */2 * * * ?
vacme.cron.priority.update=0 15 0 * * ?
vacme.cron.doccreation.cleanup=0 */30 * * * ?
vacme.cron.doccreation.create=30 * * * * ?
vacme.cron.massenverarbeitungqueue.process=0 */2 * * * ?


# configuration for mailing
quarkus.mailer.from=h2dbprofile@quarkustest.dvbern.ch
quarkus.mailer.host=h2dbprofile.mailhost.dvbern.ch
quarkus.mailer.port=25
quarkus.mailer.ssl=true
quarkus.mailer.username=h2dbprofileuser
quarkus.mailer.password=h2dbprofileuser
quarkus.mailer.mock=true
quarkus.mailer.keep-alive-timeout=PT280S

#transaction Timeout erhoehen
quarkus.transaction-manager.default-transaction-timeout=300s


vacme.sms.disabled=true
vacme.sms.provider=dummygateway
vacme.sms.mobile-only=true
vacme.sms.ecall.url=dummygateway.dvbern.ch
vacme.sms.ecall.username=dummygatewayUser
vacme.sms.ecall.password=dummygatewayUserPass
vacme.sms.ecall.jobid=dummyId
vacme.sms.ecall.callback=dummyCallback
vacme.sms.ecall.callback.ext=dummyCallbackExt
vacme.sms.swissphone.url=dummyUrl
vacme.sms.swissphone.username=dummyUsername
vacme.sms.swissphone.password=dummyPw
vacme.sms.swissphone.jobid=dummyJob
vacme.sms.swissphone.callback=dummyCallback
vacme.sms.swissphone.callback.ext=dummyCallbackExt


vacme.ftp.disabled=true
vacme.ftp.server=dummy.ftp.server.dvbern.ch
vacme.ftp.port=21
vacme.ftp.username=dummyFtpUsr
vacme.ftp.password=dummyFtpPw

# Automatisch abschliessen
vacme.service.automatisch.abschliessen.zeit.days=300
vacme.cron.auto.abschliessen=0 0 2 1/1 * ?

### Flyway minimal config properties
# True to execute Flyway automatically when the application starts, false otherwise.
quarkus.flyway.migrate-at-start=false
quarkus.flyway.locations=classpath:db/test-migration
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.baseline-version=0.0.1
#quarkus.flyway.validate-on-migrate=true

# Locale for validator messages: keep in sync with SupportedLocale/SupportedLanguage
quarkus.default-locale=de-CH
quarkus.locales=de-CH,fr-CH,it-CH,en-US

# Log Format with user
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %h %N[%i] %-5p [%c{3.}] (%t) (%X{vacmeuser_id} - %X{vacmeuser_ip}) %s%e%n
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) (%X{vacmeuser_id} - %X{vacmeuser_ip}) %s%e%n

# Hash Service
hashids.alphabet=123456789ABCDEFGHIKLMNPQRSTUVWXYZ
hashids.salt=v@cMeRN0W$
hashids.minLength=6


# Location of openapi yaml spec (default: /openapi)
quarkus.smallrye-openapi.path=/openapi.yml
# generate openapi.yaml here (build + reload)
quarkus.smallrye-openapi.store-schema-directory=target/generated-resources/openapi-schema/
quarkus.smallrye-openapi.security-scheme=oidc
quarkus.smallrye-openapi.oidc-open-id-connect-url=https://vacme-dev.dvbern.ch/auth/realms/vacme/.well-known/openid-configuration
mp.openapi.extensions.smallrye.info.title=Generated VacMe API
mp.openapi.extensions.smallrye.info.description=Generated using custom templates to be found under vacme-web-generated/src/templates.
mp.openapi.extensions.smallrye.info.version=999.0.0
mp.openapi.extensions.smallrye.operationIdStrategy=CLASS_METHOD

# DOCKER Images
# Settings used when running ./mvnw clean package -Dquarkus.container-image.build=true etc.
# see https://quarkus.io/guides/container-image
# in ci this step is triggered separately from the actual build, therefore these settings wont apply
quarkus.container-image.group=vacme
quarkus.container-image.registry=registry.dvbern.ch
quarkus.container-image.additional-tags=latest


# impfslot.year=2021
impfslot.duration=30
impfslot.work.start=6
impfslot.work.end=22
# Terminreservation
vacme.terminreservation.enabled=false
vacme.terminreservation.dauer.in.min=10

vacme.server.base.url=http://localhost:8080
vacme.keycloak.serverUrl=https://dev-h2testing.dvbern.ch/auth
vacme.keycloak.realm=dummy-realm
vacme.keycloak.clientId=dummyAdminClient
vacme.keycloak.clientSecret=adminClientSecret
vacme.keycloak.username=dummyUsername
vacme.keycloak.password=dummyPasswordKeycloakAdminCleint
vacme.keycloak.reg.realm=dummy-realm-reg
vacme.keycloak.reg.clientSecret=mysecret
#quarkus.log.level=DEBUG
# quarkus.log.category."io.quarkus.oidc".level=DEBUG
#quarkus.log.category."ch.dvbern.oss.vacme.service.booster".min-level=DEBUG
#quarkus.log.category."ch.dvbern.oss.vacme.service.booster".level=DEBUG


# Scheduler
quarkus.quartz.clustered=true
quarkus.quartz.store-type=jdbc_cmt

# Quarkus rest client config for VMDL Interface
vmdl-api/mp-rest/url=http://dev-h2testing.dvbern.ch
vmdl-api/mp-rest/scope=javax.inject.Singleton
vmdl-api/mp-rest/keyStore=/dummy/path
vmdl-api/mp-rest/keyStorePassword=dummyPassword
vmdl-api/mp-rest/keyStoreType=pkcs12
vmdl-auth-api/mp-rest/url=http://dev-h2testing.dvbern.ch
vmdl-auth-api/mp-rest/scope=javax.inject.Singleton

well-auth-api/mp-rest/url=http://well-doesnotexist.dvbern.ch
well-api/mp-rest/url=http://well-doesnotexist.dvbern.ch
well.api.client_id=dummyWellClientId
well.api.client_secret=dummyWellClientSecret

# Timeouts in ms
vmdl-auth-api/mp-rest/connectTimeout=6000
vmdl-auth-api/mp-rest/readTimeout=20000
vmdl.tenant_id=h2testingVmdl
vmdl.username=itVmdlDummyUsername
vmdl.reporting_unit_id=dev-h2testingunit
vmdl.client_id=dummyclient
vmdl.client_id.affenpocken=dummyclient_affenpocken
vmdl.password=itVmdlDummyPW
vmdl.client.logging.filter.disabled=false
vmdl.upload.chunk.limit=1
vmdl.cron.disabled=true
vacme.terminslot.offset.groups=3
vacme.terminslot.offset.min.termine.per.slot=5
vacme.terminslot.offset.max.termine.to.divide=20
quarkus.hibernate-orm.log.sql=false
vacme.cron.archivierung.pdf.disabled=true
vacme.cron.archivierung.pdf=0 0 2 1/1 * ?
vacme.service.archivierung.days=600
vacme.cron.check.zweittermine=false
vacme.cron.update.odi.no.termin=0 */15 * * * ?
vacme.cron.update.global.no.termin=* */10 * * * ?
vacme.cron.doccreation.cleanup.maxage.seconds=14400
covid-cert-api/mp-rest/url=http://dev-h2testing.dvbern.ch
covid-cert-api/mp-rest/keyStore=/dummy/path
covid-cert-api/mp-rest/keyStorePassword=dummyPassword
covid-cert-api/mp-rest/keyStoreType=pk12
covid-cert-api/mp-rest/connectTimeout=6000
covid-cert-api/mp-rest/readTimeout=20000
vacme.covidapi.ps.sleeptime.ms=500
# even minutes
vacme.cron.covidcert.api.creation=0 */2 * * * ?
# odd minutes
vacme.cron.covidcert.api.post.creation=0 1/2 * * * ?
# onboarding: every 5 minutes
vacme.cron.onboarding.post.creation=0 */5 * * * ?
vacme.cache.zertifikat.enabled.ttl.sconds=300
vacme.covidapi.ps.batchsize=200
vacme.covidcert.postable.eingang=CALLCENTER_REGISTRATION
vacme.zertifikat.minimumwait.min=0

# Umfrage
vacme.umfrage.link.gruppe1=http://dev-h2testing.dvbern.ch/umfrage1
vacme.umfrage.link.gruppe2=http://dev-h2testing.dvbern.ch/umfrage2
vacme.umfrage.link.gruppe3=http://dev-h2testing.dvbern.ch/umfrage3
vacme.umfrage.link.gruppe4=http://dev-h2testing.dvbern.ch/umfrage4
vacme.umfrage.test.empfaenger=0780000000

# Contact Tracing
tracing.respect.choice=true
vacme.fhir.path.customnarratives=classpath:/fhir/customnarratives.properties

vacme.terminvergabe.lock.enabled=true
vacme.oidc.web.auth.server.url=http://h2dbprofileunusedappweb.quarkustest.dvbern.ch
vacme.terminvergabe.random.enabled=false

vacme.onboarding.hashids.salt=dummysalt

# Damit sich mehrere instanzen von Quarkus beim Testen auf einem Buildnode nicht in die Quere kommen ueberlassen wir die
# Portwahl mal dem Betriebssystem. Das geht solange gut wie wir nicht wirklich den REST Endpoint ansprechen muessen (e.g. kein REST Assured)
# https://quarkus.io/guides/getting-started-testing#controlling-the-test-port
quarkus.http.test-port=0
quarkus.http.test-ssl-port=0