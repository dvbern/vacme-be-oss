/*
 * Copyright (C) 2022 DV Bern AG, Switzerland
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

/*
 * Covid Certificate API Gateway Service
 * Rest API for Covid Certificate API Gateway Service.
 *
 * OpenAPI spec version: 0.0.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.dvbern.oss.vacme.entities.covidcertificate;

import java.time.LocalDate;
import java.util.Objects;

import ch.dvbern.oss.vacme.shared.util.OpenApiConst;
import com.fasterxml.jackson.annotation.JsonProperty;
import org.eclipse.microprofile.openapi.annotations.media.Schema;

/**
 * VaccinationCertificateDataDto
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-25T17"
	+ ":13:54.751Z[GMT]")
public class VaccinationCertificateDataDto {
	@JsonProperty("medicinalProductCode")
	private String medicinalProductCode = null;

	@JsonProperty("numberOfDoses")
	private Integer numberOfDoses = null; // Zahl vor dem Schraegstrich

	@JsonProperty("totalNumberOfDoses")
	private Integer totalNumberOfDoses = null; // Zahl nach dem Schraegstrich

	@JsonProperty("vaccinationDate")
	@Schema(required = true, format = OpenApiConst.Format.DATE, minimum = "2020-12-20")
	private LocalDate vaccinationDate = null;

	@JsonProperty("countryOfVaccination")
	private String countryOfVaccination = null;

	public VaccinationCertificateDataDto medicinalProductCode(String medicinalProductCode) {
		this.medicinalProductCode = medicinalProductCode;
		return this;
	}

	/**
	 * name of the medicinal product as registered in the country.
	 *
	 * @return medicinalProductCode
	 **/
	@Schema(example = "68267", description = "name of the medicinal product as registered in the country.")
	public String getMedicinalProductCode() {
		return medicinalProductCode;
	}

	public void setMedicinalProductCode(String medicinalProductCode) {
		this.medicinalProductCode = medicinalProductCode;
	}

	public VaccinationCertificateDataDto numberOfDoses(Integer numberOfDoses) {
		this.numberOfDoses = numberOfDoses;
		return this;
	}

	/**
	 * number in a series of doses.
	 *
	 * @return numberOfDoses
	 **/
	@Schema(example = "2", description = "number in a series of doses.")
	public Integer getNumberOfDoses() {
		return numberOfDoses;
	}

	public void setNumberOfDoses(Integer numberOfDoses) {
		this.numberOfDoses = numberOfDoses;
	}

	public VaccinationCertificateDataDto totalNumberOfDoses(Integer totalNumberOfDoses) {
		this.totalNumberOfDoses = totalNumberOfDoses;
		return this;
	}

	/**
	 * total series of doses.
	 *
	 * @return totalNumberOfDoses
	 **/
	@Schema(example = "2", description = "total series of doses.")
	public Integer getTotalNumberOfDoses() {
		return totalNumberOfDoses;
	}

	public void setTotalNumberOfDoses(Integer totalNumberOfDoses) {
		this.totalNumberOfDoses = totalNumberOfDoses;
	}

	public VaccinationCertificateDataDto vaccinationDate(LocalDate vaccinationDate) {
		this.vaccinationDate = vaccinationDate;
		return this;
	}

	/**
	 * date of vaccination. Format: ISO 8601 date without time. Range: can be between 1900-01-01 and 2099-12-31.
	 * Regexp: \&quot;[19|20][0-9][0-9]-(0[1-9]|1[0-2])-([0-2][1-9]|3[0|1])\&quot;.
	 *
	 * @return vaccinationDate
	 **/
	@Schema(example = "Fri May 14 00:00:00 GMT 2021", description = "date of vaccination. Format: ISO 8601 date "
		+ "without time. Range: can be between 1900-01-01 and 2099-12-31. Regexp: \"[19|20][0-9][0-9]-(0[1-9]|1[0-2])-"
		+ "([0-2][1-9]|3[0|1])\".")
	public LocalDate getVaccinationDate() {
		return vaccinationDate;
	}

	public void setVaccinationDate(LocalDate vaccinationDate) {
		this.vaccinationDate = vaccinationDate;
	}

	public VaccinationCertificateDataDto countryOfVaccination(String countryOfVaccination) {
		this.countryOfVaccination = countryOfVaccination;
		return this;
	}

	/**
	 * the country in which the covid certificate owner has been vaccinated. Format: string (2 chars according to ISO
	 * 3166 Country Codes).
	 *
	 * @return countryOfVaccination
	 **/
	@Schema(example = "CH", description = "the country in which the covid certificate owner has been vaccinated. "
		+ "Format: string (2 chars according to ISO 3166 Country Codes).")
	public String getCountryOfVaccination() {
		return countryOfVaccination;
	}

	public void setCountryOfVaccination(String countryOfVaccination) {
		this.countryOfVaccination = countryOfVaccination;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		VaccinationCertificateDataDto vaccinationCertificateDataDto = (VaccinationCertificateDataDto) o;
		return Objects.equals(this.medicinalProductCode, vaccinationCertificateDataDto.medicinalProductCode) &&
			Objects.equals(this.numberOfDoses, vaccinationCertificateDataDto.numberOfDoses) &&
			Objects.equals(this.totalNumberOfDoses, vaccinationCertificateDataDto.totalNumberOfDoses) &&
			Objects.equals(this.vaccinationDate, vaccinationCertificateDataDto.vaccinationDate) &&
			Objects.equals(this.countryOfVaccination, vaccinationCertificateDataDto.countryOfVaccination);
	}

	@Override
	public int hashCode() {
		return Objects.hash(medicinalProductCode, numberOfDoses, totalNumberOfDoses, vaccinationDate,
			countryOfVaccination);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class VaccinationCertificateDataDto {\n");

		sb.append("    medicinalProductCode: ").append(toIndentedString(medicinalProductCode)).append("\n");
		sb.append("    numberOfDoses: ").append(toIndentedString(numberOfDoses)).append("\n");
		sb.append("    totalNumberOfDoses: ").append(toIndentedString(totalNumberOfDoses)).append("\n");
		sb.append("    vaccinationDate: ").append(toIndentedString(vaccinationDate)).append("\n");
		sb.append("    countryOfVaccination: ").append(toIndentedString(countryOfVaccination)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
